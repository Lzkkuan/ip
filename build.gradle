plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    mavenCentral()
}

def javaFxVersion = '17.0.7'

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly   group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'

    implementation "org.openjfx:javafx-base:${javaFxVersion}:win"
    implementation "org.openjfx:javafx-controls:${javaFxVersion}:win"
    implementation "org.openjfx:javafx-fxml:${javaFxVersion}:win"
    implementation "org.openjfx:javafx-graphics:${javaFxVersion}:win"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

checkstyle {
    toolVersion = '11.0.0'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    configProperties = [:]  // Empty properties for now
    ignoreFailures = false
}

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = false
        html.required = true
    }
}

application {
    mainClass = 'eve.gui.Launcher'
}

shadowJar {
    archiveBaseName = "eve"
    archiveClassifier = null
}

run {
    standardInput = System.in
}

// Remove all the task dependency fixes for now to simplify
